// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String         @id @default(uuid())
  email                String         @unique
  name                 String?
  age                  Int?
  height               Float?
  gender               String?        
  weight               Float?
  theme                String         @default("speed")         
  location             String?
  notificationEnabled  Boolean
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  runs                 Run[]          @relation("UserRuns")
  routes               Route[]        @relation("UserRoutes")
  stats                OutdoorStat[]  @relation("UserOutdoorStats")
  schedules            ScheduleItem[] @relation("UserScheduleItems")
}

model Run {
  id        String   @id @default(uuid())
  title     String
  distance  Float
  duration  Int
  laps      Int
  location  String?
  runType   String
  mood      String?
  gear      String?
  note      String?
  routeId   String?
  dateTime  String
  route     Route?   @relation(fields: [routeId], references: [id])
  user      User     @relation("UserRuns", fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Route {
  id         String         @id @default(uuid())
  title      String
  distance   Float?
  duration   Float?
  laps       Int?
  location   String?
  note       String?
  runType   String
  user       User           @relation("UserRoutes", fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  run        Run[]
  schedules  ScheduleItem[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

model OutdoorStat {
  id        String  @id @default(uuid())
  type      String
  label     String
  valueType String
  value     String
  range     String
  detail    String?
  user      User    @relation("UserOutdoorStats", fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ScheduleItem {
  id        String   @id @default(uuid())
  dayOfWeek Int
  route     Route?   @relation(fields: [routeId], references: [id])
  routeId   String?
  user      User     @relation("UserScheduleItems", fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
